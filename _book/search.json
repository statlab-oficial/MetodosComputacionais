[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Métodos Computacionais",
    "section": "",
    "text": "Prefácio\nEste livro resulta de anos de experiência em sala de aula dos professores Ronald Targino, Rafael Braz, Juvêncio Nobre e Manoel Santos-Neto. Destina-se a apoiar os alunos da graduação em Estatística e do Programa de Pós-Graduação em Modelagem e Métodos Quantitativos (PPGMMQ) do Departamento de Estatística e Matemática Aplicada (DEMA) da Universidade Federal do Ceará (UFC).\nAo longo dos capítulos, abordamos a geração de números aleatórios (discretos e contínuos); métodos de suavização; simulação estocástica por inversão, rejeição e composição, bem como métodos de reamostragem; métodos de aproximação e integração; quadratura Gaussiana, integração de Monte Carlo e quadratura adaptativa; métodos de Monte Carlo em sentido amplo; amostradores MCMC, com ênfase em Gibbs e Metropolis–Hastings; otimização numérica via Newton–Raphson, Fisher scoring e quase-Newton, além do algoritmo EM; Bootstrap e Jackknife; diagnóstico de convergência; e aspectos computacionais em problemas práticos, com foco em implementação eficiente, estabilidade numérica e reprodutibilidade dos resultados.\nEsperamos que este material sirva não apenas como texto-base para as disciplinas Estatística Computacional (graduação em Estatística) e Métodos Computacionais em Estatística (Mestrado-PPGMMQ), mas também como suporte para aqueles que desejam programar com qualidade na área de Estatística.",
    "crumbs": [
      "Prefácio"
    ]
  },
  {
    "objectID": "introducao.html",
    "href": "introducao.html",
    "title": "1  Introdução",
    "section": "",
    "text": "A simulação tem um papel preponderante na estatística moderna, e suas vantagens no ensino de Estatística são conhecidas há muito tempo. Em um de seus primeiros números, o periódico Teaching Statistics publicou artigos que aludem precisamente a isso. Thomas e Moore (1980) afirmaram que “a introdução do computador na sala de aula escolar trouxe uma nova técnica para o ensino, a técnica da simulação”. Zieffler e Garfield (2007) e Tintle et al. (2015) discutem o papel e a importância da aprendizagem baseada em simulação no currículo de graduação em Estatística. No entanto, outros autores (por exemplo, Hodgson e Burke 2000) discutem alguns problemas que podem surgir ao ensinar uma disciplina por meio de simulação, a saber, o desenvolvimento de certos equívocos na mente dos estudantes (Martins 2018).\nTodo estudante da Universidade Federal do Ceará conhece a cena. É hora do almoço no Restaurante Universitário (RU). A fila se alonga pelo pátio, colegas conversam, alguns reclamam da espera, outros aproveitam o tempo para revisar o conteúdo da próxima prova. O tempo parece correr de forma diferente quando estamos na fila. Para alguns, são apenas alguns minutos. Para outros, parece uma eternidade.\nAgora, pense um pouco. Quanto tempo, em média, um aluno passa esperando para se servir? Qual a chance de alguém que chega por volta das 12h30 esperar mais de vinte minutos? Por que em alguns dias a fila anda rápido e em outros parece não ter fim?\nEssas perguntas podem parecer simples, mas abrem caminho para um universo fascinante. Elas revelam como a Probabilidade e a Estatística estão presentes em situações que vivemos todos os dias. A fila do RU não é apenas um detalhe da rotina estudantil. Ela é um retrato de como os fenômenos aleatórios acontecem ao nosso redor. Cada chegada de estudante, cada tempo de atendimento, cada variação de um dia para o outro forma um sistema dinâmico que pode ser estudado e compreendido.\nÉ esse o convite deste livro. Explorar como traduzir a realidade em modelos, como usar simulações para observar padrões e como a Estatística pode ajudar a responder perguntas sobre o nosso cotidiano. Mais do que fórmulas, ela é uma maneira de olhar o mundo e encontrar nele sentido.\nAprender Estatística é aprender a lidar com a incerteza. É descobrir que até na fila do almoço existe conhecimento escondido, esperando para ser revelado.\n\n\n\n\nHodgson, Ted, e Maurice Burke. 2000. “On Simulation and the Teaching of Statistics”. Teaching Statistics 22 (3): 91–96. https://doi.org/10.1111/1467-9639.00033.\n\n\nMartins, Rui Manuel Da Costa. 2018. “Learning the Principles of Simulation Using the Birthday Problem”. Teaching Statistics 40 (3): 108–11. https://doi.org/10.1111/test.12164.\n\n\nThomas, F. H., e J. L. Moore. 1980. “CUSUM: Computer Simulation for Statistics Teaching”. Teaching Statistics 2 (1): 23–28. https://doi.org/10.1111/j.1467-9639.1980.tb00374.x.\n\n\nTintle, Nathan, Beth Chance, George Cobb, Soma Roy, Todd Swanson, e Jill VanderStoep. 2015. “Combating Anti-Statistical Thinking Using Simulation-Based Methods Throughout the Undergraduate Curriculum”. The American Statistician 69 (4): 362–70. https://doi.org/10.1080/00031305.2015.1081619.\n\n\nZieffler, Andrew, e Joan B. Garfield. 2007. “Studying the Role of Simulation in Developing Students’ Statistical Reasoning”. Em Proceedings of the 56th Session of the International Statistical Institute (ISI). International Statistical Institute.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução</span>"
    ]
  },
  {
    "objectID": "revisaoR.html",
    "href": "revisaoR.html",
    "title": "2  Uma pequena introdução ao R",
    "section": "",
    "text": "2.1 Introdução\nO R é peça-chave em inúmeros trabalhos de pesquisa e análise de dados porque reúne, de forma prática, um conjunto amplo de técnicas estatísticas atuais, das mais básicas às mais sofisticadas, e facilita seu uso no dia a dia. Quem começa no R, porém, muitas vezes também está dando os primeiros passos em programação. Assim, além de aprender as ferramentas do R para seus objetivos, é preciso desenvolver a “cabeça” de programador. Essa fase inicial ajuda a explicar a fama de que o R é “difícil”. Mesmo assim, com prática e uma boa orientação, ele se revela bem mais acessível do que parece.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Uma pequena introdução ao R</span>"
    ]
  },
  {
    "objectID": "revisaoR.html#instalação",
    "href": "revisaoR.html#instalação",
    "title": "2  Uma pequena introdução ao R",
    "section": "Instalação",
    "text": "Instalação\nEste guia mostra como baixar e instalar o R a partir do CRAN (Comprehensive R Archive Network), com orientações específicas para Windows, macOS e Linux. Ao final, você testará a instalação e configurará um espelho (mirror) brasileiro para baixar pacotes mais rápido.\n\n\n\n\n\n\nNota\n\n\n\nO que é o CRAN?\nÉ a rede oficial de servidores que distribui o R e seus pacotes. Você pode usar o endereço inteligente https://cloud.r-project.org ou definir um espelho no Brasil (ex.: C3SL/UFPR).\n\n\nVocê pode simplesmente usar:\n\nCloud CRAN (recomendado): https://cloud.r-project.org (redireciona para um espelho próximo).\nBrasil (ex.: UFPR/C3SL): https://cran-r.c3sl.ufpr.br\n\nMais adiante, mostraremos como fixar o mirror no R permanentemente.\n\nWindows\n\nAcesse a página Download R for Windows → base e baixe o instalador.\nExecute o instalador e avance com as opções padrão (recomendado para iniciantes).\n(Opcional) Se pretende compilar pacotes a partir do código-fonte, instale o Rtools compatível com a sua versão do R.\n\n\n\n\n\n\n\nDica\n\n\n\nRtools: após instalar, reinicie o R/RStudio. Em geral, o Rtools adiciona as ferramentas ao PATH automaticamente.\n\n\n\n\nmacOS\n\nAcesse R for macOS no CRAN e baixe o arquivo .pkg da versão atual.\nAbra o .pkg e conclua a instalação.\n(Opcional) Para compilar pacotes, instale também as Command Line Tools do Xcode:\n\nxcode-select --install\n\n\nLinux\nUbuntu/Debian\nOpção rápida (repositório da distribuição):\nsudo apt update\nsudo apt install -y r-base\nPara obter versões mais novas (repositório do CRAN), siga as instruções do CRAN para adicionar o repositório oficial e então:\nsudo apt update\nsudo apt install -y r-base r-base-dev\nVerificar a instalação\nNo terminal/Prompt:\nR --version\nR\nDentro do R:\n\nversion\n\n               _                           \nplatform       x86_64-pc-linux-gnu         \narch           x86_64                      \nos             linux-gnu                   \nsystem         x86_64, linux-gnu           \nstatus                                     \nmajor          4                           \nminor          5.1                         \nyear           2025                        \nmonth          06                          \nday            13                          \nsvn rev        88306                       \nlanguage       R                           \nversion.string R version 4.5.1 (2025-06-13)\nnickname       Great Square Root           \n\n\nSe o R abriu no console, a instalação está ok!\nTeste rápido de pacotes\nNo R:\n\n#install.packages(\"tidyverse\")   # teste de instalação/espelho\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   4.0.0     ✔ tibble    3.3.0\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ntibble(x = 1:5, y = x^2)\n\n# A tibble: 5 × 2\n      x     y\n  &lt;int&gt; &lt;dbl&gt;\n1     1     1\n2     2     4\n3     3     9\n4     4    16\n5     5    25\n\n\nSe o pacote instalou e carregou sem erros, está tudo certo.\n\nFixar um mirror brasileiro do CRAN\nDefina o espelho apenas nesta sessão:\n\noptions(repos = c(CRAN = \"https://cran-r.c3sl.ufpr.br\"))\ninstall.packages(\"ggplot2\")\n\nPara tornar permanente, adicione a linha abaixo ao seu arquivo ~/.Rprofile:\n\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n# ou, se preferir, o espelho da UFPR:\n# options(repos = c(CRAN = \"https://cran-r.c3sl.ufpr.br\"))\n\n\n\nComo editar o ~/.Rprofile\n\nLinux/macOS:\n\necho 'options(repos = c(CRAN = \"https://cloud.r-project.org\"))' &gt;&gt; ~/.Rprofile\n\nWindows: o ~ normalmente aponta para C:\\\\Users\\\\SEU_USUARIO\\\\Documents.\n\nVocê pode criar/editar C:\\\\Users\\\\SEU_USUARIO\\\\Documents\\\\.Rprofile com um editor de texto.\n\n\n(Opcional) IDE recomendada: RStudio\nApós instalar o R, instale o RStudio Desktop (Posit) para um ambiente de desenvolvimento mais amigável:\n\nCriação/edição de scripts\nGerenciamento de projetos\nVisualização de plots e help integrados\n\n\n\nDicas e solução de problemas\n\nPermissões de administrador: em ambientes corporativos, pode ser necessário pedir para TI instalar o R.\nFirewall/Proxy: se a instalação de pacotes falhar, verifique configurações de proxy e tente trocar o mirror.\nCompatibilidade de versões: ao compilar pacotes, garanta que as ferramentas (Rtools no Windows; CLT/Xcode no macOS) correspondam à sua versão do R.\nAtualização do R: ao atualizar o R, alguns pacotes precisarão ser reinstalados; use install.packages() novamente.\nTestes mínimos:\n\n\nsessionInfo()\n\nR version 4.5.1 (2025-06-13)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 24.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=pt_BR.UTF-8        LC_COLLATE=pt_BR.UTF-8    \n [5] LC_MONETARY=pt_BR.UTF-8    LC_MESSAGES=pt_BR.UTF-8   \n [7] LC_PAPER=pt_BR.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=pt_BR.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: America/Fortaleza\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n [5] purrr_1.0.2     readr_2.1.5     tidyr_1.3.1     tibble_3.3.0   \n [9] ggplot2_4.0.0   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       jsonlite_1.8.8     compiler_4.5.1     tidyselect_1.2.1  \n [5] dichromat_2.0-0.1  scales_1.4.0       yaml_2.3.8         fastmap_1.1.1     \n [9] R6_2.6.1           generics_0.1.3     knitr_1.50         htmlwidgets_1.6.4 \n[13] pillar_1.11.0      RColorBrewer_1.1-3 tzdb_0.4.0         rlang_1.1.6       \n[17] stringi_1.8.3      xfun_0.53          S7_0.2.0           timechange_0.3.0  \n[21] cli_3.6.5          withr_3.0.2        magrittr_2.0.3     digest_0.6.34     \n[25] grid_4.5.1         rstudioapi_0.15.0  hms_1.1.3          lifecycle_1.0.4   \n[29] vctrs_0.6.5        evaluate_1.0.5     glue_1.8.0         farver_2.1.2      \n[33] rmarkdown_2.29     tools_4.5.1        pkgconfig_2.0.3    htmltools_0.5.8.1 \n\ncapabilities()  # checa recursos gráficos, etc.\n\n       jpeg         png        tiff       tcltk         X11        aqua \n       TRUE        TRUE        TRUE        TRUE       FALSE       FALSE \n   http/ftp     sockets      libxml        fifo      cledit       iconv \n       TRUE        TRUE       FALSE        TRUE       FALSE        TRUE \n        NLS       Rprof     profmem       cairo         ICU long.double \n       TRUE        TRUE        TRUE        TRUE        TRUE        TRUE \n    libcurl \n       TRUE",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Uma pequena introdução ao R</span>"
    ]
  },
  {
    "objectID": "revisaoR.html#o-que-é-o-r",
    "href": "revisaoR.html#o-que-é-o-r",
    "title": "2  Uma pequena introdução ao R",
    "section": "2.2 O que é o R",
    "text": "2.2 O que é o R\nR é uma implementação moderna da linguagem S, voltada à computação estatística e à visualização de dados. Ele reúne, no mesmo lugar, um ambiente interativo para análise e criação de gráficos e uma linguagem de programação completa.\n\n\n\n\n\n\nNota\n\n\n\nEm uma frase: R é um ambiente estatístico + uma linguagem, criada para trabalhar bem com dados, gráficos e métodos modernos.\n\n\n\nPrincipais características\n\nInterativo e interpretado, com suporte a JIT/bytecode via pacote compiler.\nOrientado a objetos (S3, S4 e R6) e com forte base funcional.\nModelo “tudo é objeto”: números, vetores, data frames, funções, ambientes e modelos ajustados.\nVetorização nativa e operações matriciais eficientes.\nEcossistema de pacotes amplo (CRAN, Bioconductor) para estatística e ciência de dados.\nExtensível com C/C++/Fortran e integração com Python, SQL e serviços externos.\nMultiplataforma (Windows, macOS, Linux) e foco em reprodutibilidade (scripts, Quarto/R Markdown).\n\n\n\nExemplo - “tudo é objeto”\n\nx &lt;- 1:5               # vetor (objeto)\nmedia &lt;- mean(x)       # função aplicada ao objeto\n\nf &lt;- function(z) z^2\nclasse_f &lt;- class(f)   # \"function\" — funções também são objetos\n\nattr(x, \"nota\") &lt;- \"exemplo de atributo\"\nlista &lt;- list(x = x, media = media, classe_f = classe_f)\n\nstr(lista)             # inspeciona a estrutura\n\nList of 3\n $ x       : int [1:5] 1 2 3 4 5\n  ..- attr(*, \"nota\")= chr \"exemplo de atributo\"\n $ media   : num 3\n $ classe_f: chr \"function\"\n\nlista\n\n$x\n[1] 1 2 3 4 5\nattr(,\"nota\")\n[1] \"exemplo de atributo\"\n\n$media\n[1] 3\n\n$classe_f\n[1] \"function\"\n\n\n\n\n\n\n\n\nDica\n\n\n\nDica: use str(obj) para entender a estrutura de qualquer objeto no R.\nOutras funções úteis: class(), attributes(), typeof(), methods(class = ...).\n\n\nAqui vai como mudar o prompt do R para R&gt;, na sessão atual usando:\n\noptions(prompt = \"R&gt; \", continue = \"+\")\n\nPara adicionar comentários no R, como você observou nos exemplos acima, basta usar #, como no exemplo abaixo:\n\n#Este é um comentário! \n#Que o semestre seja leve para todos nós!\n\nUma sessão ativa do R sempre está “apontando” para um diretório de trabalho. Se você não informar um caminho completo ao salvar ou importar arquivos, o R usará esse diretório por padrão. Para descobrir onde ele está:\n\ngetwd()\n\n[1] \"/home/manoel/Documentos/Book_Computacional_UFC\"\n\n\nSe você deseja modificar o diretório de trabalho, isso pode ser feito de maneira simples:\n\n# Windows\nsetwd(\"C:/Users/SeuUsuario/Documents/meu-projeto\")\n\n# macOS / Linux\nsetwd(\"/Users/seuusuario/meu-projeto\")\n\nO R não vem com todos os pacotes adicionais que a comunidade desenvolve. Para usá-los, você precisa baixar e instalar a partir de um repositório, em geral, o CRAN.\n\n# define um espelho (mirror) do CRAN para esta sessão\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n# instala um ou mais pacotes\ninstall.packages(\"tidyverse\")\ninstall.packages(c(\"ggplot2\", \"dplyr\", \"readr\"))\n\n# carrega para usar\nlibrary(tidyverse)\n\nA instalação pode ser feita também facilmente usando o RStudio.\nPacotes da comunidade são atualizados com frequência para corrigir erros e acrescentar recursos. Periodicamente, vale checar se há novas versões para o que você já tem instalado. A partir do console do R, você pode verificar e atualizar com um único comando.\n\n# defina um mirror (opcional, mas recomendável)\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n# procura versões mais novas e atualiza automaticamente\nupdate.packages(ask = FALSE, checkBuilt = TRUE)\n\n\nask = FALSE atualiza sem perguntar pacote a pacote.\ncheckBuilt = TRUE recompila pacotes se sua versão do R mudou.\n\nVer o que está desatualizado antes:\n\nold.packages()  # retorna uma tabela com pacotes que têm versão mais nova\n\n              Package         LibPath                                         \nggiraph       \"ggiraph\"       \"/home/manoel/R/x86_64-pc-linux-gnu-library/4.5\"\nggplotify     \"ggplotify\"     \"/home/manoel/R/x86_64-pc-linux-gnu-library/4.5\"\nggsci         \"ggsci\"         \"/home/manoel/R/x86_64-pc-linux-gnu-library/4.5\"\ngt            \"gt\"            \"/home/manoel/R/x86_64-pc-linux-gnu-library/4.5\"\npillar        \"pillar\"        \"/home/manoel/R/x86_64-pc-linux-gnu-library/4.5\"\npkgload       \"pkgload\"       \"/home/manoel/R/x86_64-pc-linux-gnu-library/4.5\"\nrmarkdown     \"rmarkdown\"     \"/home/manoel/R/x86_64-pc-linux-gnu-library/4.5\"\nsystemfonts   \"systemfonts\"   \"/home/manoel/R/x86_64-pc-linux-gnu-library/4.5\"\nterra         \"terra\"         \"/home/manoel/R/x86_64-pc-linux-gnu-library/4.5\"\nthematic      \"thematic\"      \"/home/manoel/R/x86_64-pc-linux-gnu-library/4.5\"\nV8            \"V8\"            \"/home/manoel/R/x86_64-pc-linux-gnu-library/4.5\"\naskpass       \"askpass\"       \"/usr/lib/R/site-library\"                       \nbackports     \"backports\"     \"/usr/lib/R/site-library\"                       \nbit           \"bit\"           \"/usr/lib/R/site-library\"                       \nbit64         \"bit64\"         \"/usr/lib/R/site-library\"                       \nbroom         \"broom\"         \"/usr/lib/R/site-library\"                       \nbslib         \"bslib\"         \"/usr/lib/R/site-library\"                       \ncachem        \"cachem\"        \"/usr/lib/R/site-library\"                       \ncallr         \"callr\"         \"/usr/lib/R/site-library\"                       \ncli           \"cli\"           \"/usr/lib/R/site-library\"                       \ncolorspace    \"colorspace\"    \"/usr/lib/R/site-library\"                       \ncommonmark    \"commonmark\"    \"/usr/lib/R/site-library\"                       \ncpp11         \"cpp11\"         \"/usr/lib/R/site-library\"                       \ncrayon        \"crayon\"        \"/usr/lib/R/site-library\"                       \ncurl          \"curl\"          \"/usr/lib/R/site-library\"                       \ndata.table    \"data.table\"    \"/usr/lib/R/site-library\"                       \nDBI           \"DBI\"           \"/usr/lib/R/site-library\"                       \ndbplyr        \"dbplyr\"        \"/usr/lib/R/site-library\"                       \ndigest        \"digest\"        \"/usr/lib/R/site-library\"                       \ndtplyr        \"dtplyr\"        \"/usr/lib/R/site-library\"                       \nevaluate      \"evaluate\"      \"/usr/lib/R/site-library\"                       \nfansi         \"fansi\"         \"/usr/lib/R/site-library\"                       \nfarver        \"farver\"        \"/usr/lib/R/site-library\"                       \nfastmap       \"fastmap\"       \"/usr/lib/R/site-library\"                       \nfontawesome   \"fontawesome\"   \"/usr/lib/R/site-library\"                       \nforcats       \"forcats\"       \"/usr/lib/R/site-library\"                       \nfs            \"fs\"            \"/usr/lib/R/site-library\"                       \ngargle        \"gargle\"        \"/usr/lib/R/site-library\"                       \ngenerics      \"generics\"      \"/usr/lib/R/site-library\"                       \nggplot2       \"ggplot2\"       \"/usr/lib/R/site-library\"                       \nglue          \"glue\"          \"/usr/lib/R/site-library\"                       \ngoogledrive   \"googledrive\"   \"/usr/lib/R/site-library\"                       \ngooglesheets4 \"googlesheets4\" \"/usr/lib/R/site-library\"                       \ngtable        \"gtable\"        \"/usr/lib/R/site-library\"                       \nhaven         \"haven\"         \"/usr/lib/R/site-library\"                       \nhighr         \"highr\"         \"/usr/lib/R/site-library\"                       \nhtmltools     \"htmltools\"     \"/usr/lib/R/site-library\"                       \nhttpuv        \"httpuv\"        \"/usr/lib/R/site-library\"                       \njsonlite      \"jsonlite\"      \"/usr/lib/R/site-library\"                       \nknitr         \"knitr\"         \"/usr/lib/R/site-library\"                       \nlater         \"later\"         \"/usr/lib/R/site-library\"                       \nlubridate     \"lubridate\"     \"/usr/lib/R/site-library\"                       \nmagrittr      \"magrittr\"      \"/usr/lib/R/site-library\"                       \nmime          \"mime\"          \"/usr/lib/R/site-library\"                       \nmunsell       \"munsell\"       \"/usr/lib/R/site-library\"                       \nopenssl       \"openssl\"       \"/usr/lib/R/site-library\"                       \npillar        \"pillar\"        \"/usr/lib/R/site-library\"                       \npkgKitten     \"pkgKitten\"     \"/usr/lib/R/site-library\"                       \nprocessx      \"processx\"      \"/usr/lib/R/site-library\"                       \npromises      \"promises\"      \"/usr/lib/R/site-library\"                       \nps            \"ps\"            \"/usr/lib/R/site-library\"                       \npurrr         \"purrr\"         \"/usr/lib/R/site-library\"                       \nR6            \"R6\"            \"/usr/lib/R/site-library\"                       \nragg          \"ragg\"          \"/usr/lib/R/site-library\"                       \nRcpp          \"Rcpp\"          \"/usr/lib/R/site-library\"                       \nreadxl        \"readxl\"        \"/usr/lib/R/site-library\"                       \nreprex        \"reprex\"        \"/usr/lib/R/site-library\"                       \nrlang         \"rlang\"         \"/usr/lib/R/site-library\"                       \nrmarkdown     \"rmarkdown\"     \"/usr/lib/R/site-library\"                       \nrstudioapi    \"rstudioapi\"    \"/usr/lib/R/site-library\"                       \nrvest         \"rvest\"         \"/usr/lib/R/site-library\"                       \nsass          \"sass\"          \"/usr/lib/R/site-library\"                       \nscales        \"scales\"        \"/usr/lib/R/site-library\"                       \nshiny         \"shiny\"         \"/usr/lib/R/site-library\"                       \nstringi       \"stringi\"       \"/usr/lib/R/site-library\"                       \nstringr       \"stringr\"       \"/usr/lib/R/site-library\"                       \nsys           \"sys\"           \"/usr/lib/R/site-library\"                       \nsystemfonts   \"systemfonts\"   \"/usr/lib/R/site-library\"                       \ntextshaping   \"textshaping\"   \"/usr/lib/R/site-library\"                       \ntibble        \"tibble\"        \"/usr/lib/R/site-library\"                       \ntidyselect    \"tidyselect\"    \"/usr/lib/R/site-library\"                       \ntinytex       \"tinytex\"       \"/usr/lib/R/site-library\"                       \ntzdb          \"tzdb\"          \"/usr/lib/R/site-library\"                       \nutf8          \"utf8\"          \"/usr/lib/R/site-library\"                       \nuuid          \"uuid\"          \"/usr/lib/R/site-library\"                       \nvroom         \"vroom\"         \"/usr/lib/R/site-library\"                       \nwithr         \"withr\"         \"/usr/lib/R/site-library\"                       \nxfun          \"xfun\"          \"/usr/lib/R/site-library\"                       \nxml2          \"xml2\"          \"/usr/lib/R/site-library\"                       \nyaml          \"yaml\"          \"/usr/lib/R/site-library\"                       \nboot          \"boot\"          \"/usr/lib/R/library\"                            \nlattice       \"lattice\"       \"/usr/lib/R/library\"                            \nmgcv          \"mgcv\"          \"/usr/lib/R/library\"                            \nspatial       \"spatial\"       \"/usr/lib/R/library\"                            \n              Installed Built   ReposVer \nggiraph       \"0.9.0\"   \"4.5.1\" \"0.9.1\"  \nggplotify     \"0.1.2\"   \"4.5.0\" \"0.1.3\"  \nggsci         \"3.2.0\"   \"4.5.0\" \"4.0.0\"  \ngt            \"1.0.0\"   \"4.5.1\" \"1.1.0\"  \npillar        \"1.11.0\"  \"4.5.1\" \"1.11.1\" \npkgload       \"1.4.0\"   \"4.5.1\" \"1.4.1\"  \nrmarkdown     \"2.29\"    \"4.5.1\" \"2.30\"   \nsystemfonts   \"1.2.3\"   \"4.5.1\" \"1.3.0\"  \nterra         \"1.8-60\"  \"4.5.1\" \"1.8-70\" \nthematic      \"0.1.7\"   \"4.5.1\" \"0.1.8\"  \nV8            \"7.0.0\"   \"4.5.1\" \"8.0.0\"  \naskpass       \"1.2.0\"   \"4.3.1\" \"1.2.1\"  \nbackports     \"1.4.1\"   \"4.1.2\" \"1.5.0\"  \nbit           \"4.0.5\"   \"4.2.2\" \"4.6.0\"  \nbit64         \"4.0.5\"   \"4.0.2\" \"4.6.0-1\"\nbroom         \"1.0.5\"   \"4.3.0\" \"1.0.10\" \nbslib         \"0.6.1\"   \"4.3.2\" \"0.9.0\"  \ncachem        \"1.0.8\"   \"4.3.0\" \"1.1.0\"  \ncallr         \"3.7.5\"   \"4.3.3\" \"3.7.6\"  \ncli           \"3.6.2\"   \"4.3.2\" \"3.6.5\"  \ncolorspace    \"2.1-0\"   \"4.2.2\" \"2.1-2\"  \ncommonmark    \"1.9.1\"   \"4.3.2\" \"2.0.0\"  \ncpp11         \"0.4.7\"   \"4.3.2\" \"0.5.2\"  \ncrayon        \"1.5.2\"   \"4.2.2\" \"1.5.3\"  \ncurl          \"5.2.0\"   \"4.3.3\" \"7.0.0\"  \ndata.table    \"1.14.10\" \"4.3.2\" \"1.17.8\" \nDBI           \"1.2.2\"   \"4.3.2\" \"1.2.3\"  \ndbplyr        \"2.4.0\"   \"4.3.2\" \"2.5.1\"  \ndigest        \"0.6.34\"  \"4.3.2\" \"0.6.37\" \ndtplyr        \"1.3.1\"   \"4.3.0\" \"1.3.2\"  \nevaluate      \"0.23\"    \"4.3.2\" \"1.0.5\"  \nfansi         \"1.0.5\"   \"4.3.2\" \"1.0.6\"  \nfarver        \"2.1.1\"   \"4.2.1\" \"2.1.2\"  \nfastmap       \"1.1.1\"   \"4.2.2\" \"1.2.0\"  \nfontawesome   \"0.5.2\"   \"4.3.1\" \"0.5.3\"  \nforcats       \"1.0.0\"   \"4.2.2\" \"1.0.1\"  \nfs            \"1.6.3\"   \"4.3.3\" \"1.6.6\"  \ngargle        \"1.5.2\"   \"4.3.1\" \"1.6.0\"  \ngenerics      \"0.1.3\"   \"4.2.1\" \"0.1.4\"  \nggplot2       \"3.4.4\"   \"4.3.1\" \"4.0.0\"  \nglue          \"1.7.0\"   \"4.3.2\" \"1.8.0\"  \ngoogledrive   \"2.1.1\"   \"4.3.1\" \"2.1.2\"  \ngooglesheets4 \"1.1.1\"   \"4.3.1\" \"1.1.2\"  \ngtable        \"0.3.4\"   \"4.3.1\" \"0.3.6\"  \nhaven         \"2.5.4\"   \"4.3.2\" \"2.5.5\"  \nhighr         \"0.10\"    \"4.2.2\" \"0.11\"   \nhtmltools     \"0.5.7\"   \"4.3.2\" \"0.5.8.1\"\nhttpuv        \"1.6.14\"  \"4.3.3\" \"1.6.16\" \njsonlite      \"1.8.8\"   \"4.3.2\" \"2.0.0\"  \nknitr         \"1.45\"    \"4.3.2\" \"1.50\"   \nlater         \"1.3.2\"   \"4.3.2\" \"1.4.4\"  \nlubridate     \"1.9.3\"   \"4.3.1\" \"1.9.4\"  \nmagrittr      \"2.0.3\"   \"4.1.2\" \"2.0.4\"  \nmime          \"0.12\"    \"4.1.1\" \"0.13\"   \nmunsell       \"0.5.0\"   \"4.0.1\" \"0.5.1\"  \nopenssl       \"2.1.1\"   \"4.3.3\" \"2.3.4\"  \npillar        \"1.9.0\"   \"4.3.0\" \"1.11.1\" \npkgKitten     \"0.2.3\"   \"4.2.2\" \"0.2.4\"  \nprocessx      \"3.8.3\"   \"4.3.2\" \"3.8.6\"  \npromises      \"1.2.1\"   \"4.3.1\" \"1.3.3\"  \nps            \"1.7.6\"   \"4.3.2\" \"1.9.1\"  \npurrr         \"1.0.2\"   \"4.3.1\" \"1.1.0\"  \nR6            \"2.5.1\"   \"4.1.1\" \"2.6.1\"  \nragg          \"1.2.7\"   \"4.3.3\" \"1.5.0\"  \nRcpp          \"1.0.12\"  \"4.3.2\" \"1.1.0\"  \nreadxl        \"1.4.3\"   \"4.3.1\" \"1.4.5\"  \nreprex        \"2.1.0\"   \"4.3.2\" \"2.1.1\"  \nrlang         \"1.1.3\"   \"4.3.2\" \"1.1.6\"  \nrmarkdown     \"2.25\"    \"4.3.2\" \"2.30\"   \nrstudioapi    \"0.15.0\"  \"4.3.1\" \"0.17.1\" \nrvest         \"1.0.3\"   \"4.2.1\" \"1.0.5\"  \nsass          \"0.4.8\"   \"4.3.2\" \"0.4.10\" \nscales        \"1.3.0\"   \"4.3.2\" \"1.4.0\"  \nshiny         \"1.8.0\"   \"4.3.2\" \"1.11.1\" \nstringi       \"1.8.3\"   \"4.3.2\" \"1.8.7\"  \nstringr       \"1.5.1\"   \"4.3.2\" \"1.5.2\"  \nsys           \"3.4.2\"   \"4.3.1\" \"3.4.3\"  \nsystemfonts   \"1.0.5\"   \"4.3.1\" \"1.3.0\"  \ntextshaping   \"0.3.7\"   \"4.3.1\" \"1.0.3\"  \ntibble        \"3.2.1\"   \"4.3.1\" \"3.3.0\"  \ntidyselect    \"1.2.0\"   \"4.2.2\" \"1.2.1\"  \ntinytex       \"0.49\"    \"4.3.2\" \"0.57\"   \ntzdb          \"0.4.0\"   \"4.3.1\" \"0.5.0\"  \nutf8          \"1.2.4\"   \"4.3.1\" \"1.2.6\"  \nuuid          \"1.2-0\"   \"4.3.2\" \"1.2-1\"  \nvroom         \"1.6.5\"   \"4.3.2\" \"1.6.6\"  \nwithr         \"2.5.0\"   \"4.1.2\" \"3.0.2\"  \nxfun          \"0.41\"    \"4.3.2\" \"0.53\"   \nxml2          \"1.3.6\"   \"4.3.2\" \"1.4.0\"  \nyaml          \"2.3.8\"   \"4.3.2\" \"2.3.10\" \nboot          \"1.3-31\"  \"4.4.2\" \"1.3-32\" \nlattice       \"0.22-5\"  \"4.3.3\" \"0.22-7\" \nmgcv          \"1.9-1\"   \"4.3.2\" \"1.9-3\"  \nspatial       \"7.3-17\"  \"4.4.0\" \"7.3-18\" \n              Repository                               \nggiraph       \"https://cloud.r-project.org/src/contrib\"\nggplotify     \"https://cloud.r-project.org/src/contrib\"\nggsci         \"https://cloud.r-project.org/src/contrib\"\ngt            \"https://cloud.r-project.org/src/contrib\"\npillar        \"https://cloud.r-project.org/src/contrib\"\npkgload       \"https://cloud.r-project.org/src/contrib\"\nrmarkdown     \"https://cloud.r-project.org/src/contrib\"\nsystemfonts   \"https://cloud.r-project.org/src/contrib\"\nterra         \"https://cloud.r-project.org/src/contrib\"\nthematic      \"https://cloud.r-project.org/src/contrib\"\nV8            \"https://cloud.r-project.org/src/contrib\"\naskpass       \"https://cloud.r-project.org/src/contrib\"\nbackports     \"https://cloud.r-project.org/src/contrib\"\nbit           \"https://cloud.r-project.org/src/contrib\"\nbit64         \"https://cloud.r-project.org/src/contrib\"\nbroom         \"https://cloud.r-project.org/src/contrib\"\nbslib         \"https://cloud.r-project.org/src/contrib\"\ncachem        \"https://cloud.r-project.org/src/contrib\"\ncallr         \"https://cloud.r-project.org/src/contrib\"\ncli           \"https://cloud.r-project.org/src/contrib\"\ncolorspace    \"https://cloud.r-project.org/src/contrib\"\ncommonmark    \"https://cloud.r-project.org/src/contrib\"\ncpp11         \"https://cloud.r-project.org/src/contrib\"\ncrayon        \"https://cloud.r-project.org/src/contrib\"\ncurl          \"https://cloud.r-project.org/src/contrib\"\ndata.table    \"https://cloud.r-project.org/src/contrib\"\nDBI           \"https://cloud.r-project.org/src/contrib\"\ndbplyr        \"https://cloud.r-project.org/src/contrib\"\ndigest        \"https://cloud.r-project.org/src/contrib\"\ndtplyr        \"https://cloud.r-project.org/src/contrib\"\nevaluate      \"https://cloud.r-project.org/src/contrib\"\nfansi         \"https://cloud.r-project.org/src/contrib\"\nfarver        \"https://cloud.r-project.org/src/contrib\"\nfastmap       \"https://cloud.r-project.org/src/contrib\"\nfontawesome   \"https://cloud.r-project.org/src/contrib\"\nforcats       \"https://cloud.r-project.org/src/contrib\"\nfs            \"https://cloud.r-project.org/src/contrib\"\ngargle        \"https://cloud.r-project.org/src/contrib\"\ngenerics      \"https://cloud.r-project.org/src/contrib\"\nggplot2       \"https://cloud.r-project.org/src/contrib\"\nglue          \"https://cloud.r-project.org/src/contrib\"\ngoogledrive   \"https://cloud.r-project.org/src/contrib\"\ngooglesheets4 \"https://cloud.r-project.org/src/contrib\"\ngtable        \"https://cloud.r-project.org/src/contrib\"\nhaven         \"https://cloud.r-project.org/src/contrib\"\nhighr         \"https://cloud.r-project.org/src/contrib\"\nhtmltools     \"https://cloud.r-project.org/src/contrib\"\nhttpuv        \"https://cloud.r-project.org/src/contrib\"\njsonlite      \"https://cloud.r-project.org/src/contrib\"\nknitr         \"https://cloud.r-project.org/src/contrib\"\nlater         \"https://cloud.r-project.org/src/contrib\"\nlubridate     \"https://cloud.r-project.org/src/contrib\"\nmagrittr      \"https://cloud.r-project.org/src/contrib\"\nmime          \"https://cloud.r-project.org/src/contrib\"\nmunsell       \"https://cloud.r-project.org/src/contrib\"\nopenssl       \"https://cloud.r-project.org/src/contrib\"\npillar        \"https://cloud.r-project.org/src/contrib\"\npkgKitten     \"https://cloud.r-project.org/src/contrib\"\nprocessx      \"https://cloud.r-project.org/src/contrib\"\npromises      \"https://cloud.r-project.org/src/contrib\"\nps            \"https://cloud.r-project.org/src/contrib\"\npurrr         \"https://cloud.r-project.org/src/contrib\"\nR6            \"https://cloud.r-project.org/src/contrib\"\nragg          \"https://cloud.r-project.org/src/contrib\"\nRcpp          \"https://cloud.r-project.org/src/contrib\"\nreadxl        \"https://cloud.r-project.org/src/contrib\"\nreprex        \"https://cloud.r-project.org/src/contrib\"\nrlang         \"https://cloud.r-project.org/src/contrib\"\nrmarkdown     \"https://cloud.r-project.org/src/contrib\"\nrstudioapi    \"https://cloud.r-project.org/src/contrib\"\nrvest         \"https://cloud.r-project.org/src/contrib\"\nsass          \"https://cloud.r-project.org/src/contrib\"\nscales        \"https://cloud.r-project.org/src/contrib\"\nshiny         \"https://cloud.r-project.org/src/contrib\"\nstringi       \"https://cloud.r-project.org/src/contrib\"\nstringr       \"https://cloud.r-project.org/src/contrib\"\nsys           \"https://cloud.r-project.org/src/contrib\"\nsystemfonts   \"https://cloud.r-project.org/src/contrib\"\ntextshaping   \"https://cloud.r-project.org/src/contrib\"\ntibble        \"https://cloud.r-project.org/src/contrib\"\ntidyselect    \"https://cloud.r-project.org/src/contrib\"\ntinytex       \"https://cloud.r-project.org/src/contrib\"\ntzdb          \"https://cloud.r-project.org/src/contrib\"\nutf8          \"https://cloud.r-project.org/src/contrib\"\nuuid          \"https://cloud.r-project.org/src/contrib\"\nvroom         \"https://cloud.r-project.org/src/contrib\"\nwithr         \"https://cloud.r-project.org/src/contrib\"\nxfun          \"https://cloud.r-project.org/src/contrib\"\nxml2          \"https://cloud.r-project.org/src/contrib\"\nyaml          \"https://cloud.r-project.org/src/contrib\"\nboot          \"https://cloud.r-project.org/src/contrib\"\nlattice       \"https://cloud.r-project.org/src/contrib\"\nmgcv          \"https://cloud.r-project.org/src/contrib\"\nspatial       \"https://cloud.r-project.org/src/contrib\"\n\n\nAtualizar apenas alguns pacotes:\n\nupdate.packages(oldPkgs = c(\"gamlss\", \"ggmap\"), ask = FALSE)\n\nO R traz um conjunto amplo de arquivos de ajuda que permitem:\n\nBuscar funcionalidades por nome ou por tema.\nEntender como usar uma função e quais argumentos ela recebe.\nEsclarecer o papel de cada argumento e o que a função retorna.\nVer exemplos de uso prontos para rodar.\nSaber como citar o R, pacotes e conjuntos de dados em publicações.\n\nAgora iremos ver algumas funções úteis:\n\nAjuda com função específica:\n\n\n?lm # atalho                  \n\nhelp(\"lm\") #abre a documentação da função\n\nhelp(package = \"stats\") # índice de um pacote\n\n\nBuscar por tema (se você não sabe o nome exato):\n\n\n??\"linear model\"        # busca por tópicos\nhelp.search(\"normal\")   # alternativa\napropos(\"plot\")         # lista objetos cujo nome contém \"plot\"\n\n\nVer argumentos e formas de chamada\n\n\nargs(lm)  # nomes dos argumentos (se aplicável)\nformals(lm) # valores-padrão dos argumentos\n\n\nExemplos, retorno e estrutura\n\n\nexample(lm) # roda os exemplos da ajuda\nm &lt;- lm(mpg ~ wt, data = mtcars)\nstr(m)                  # inspeciona o objeto retornado\nmethods(\"predict\")      # métodos disponíveis para um genérico\n\n\nVignettes (tutoriais)\n\n\nvignette()  # lista geral\nvignette(package = \"ggplot2\") # vignettes de um pacote\nbrowseVignettes(package = \"dplyr\")  # abre no navegador\n\n\nComo citar R/pacotes/dados\n\n\ncitation()  # como citar o R\n\nTo cite R in publications use:\n\n  R Core Team (2025). _R: A Language and Environment for Statistical\n  Computing_. R Foundation for Statistical Computing, Vienna, Austria.\n  &lt;https://www.R-project.org/&gt;.\n\nUma entrada BibTeX para usuários(as) de LaTeX é\n\n  @Manual{,\n    title = {R: A Language and Environment for Statistical Computing},\n    author = {{R Core Team}},\n    organization = {R Foundation for Statistical Computing},\n    address = {Vienna, Austria},\n    year = {2025},\n    url = {https://www.R-project.org/},\n  }\n\nWe have invested a lot of time and effort in creating R, please cite it\nwhen using it for data analysis. See also 'citation(\"pkgname\")' for\nciting R packages.\n\ncitation(\"ggplot2\")   # como citar um pacote\n\nTo cite ggplot2 in publications, please use\n\n  H. Wickham. ggplot2: Elegant Graphics for Data Analysis.\n  Springer-Verlag New York, 2016.\n\nUma entrada BibTeX para usuários(as) de LaTeX é\n\n  @Book{,\n    author = {Hadley Wickham},\n    title = {ggplot2: Elegant Graphics for Data Analysis},\n    publisher = {Springer-Verlag New York},\n    year = {2016},\n    isbn = {978-3-319-24277-4},\n    url = {https://ggplot2.tidyverse.org},\n  }\n\ntoBibtex(citation(\"ggplot2\"))  # em BibTeX \n\n@Book{,\n  author = {Hadley Wickham},\n  title = {ggplot2: Elegant Graphics for Data Analysis},\n  publisher = {Springer-Verlag New York},\n  year = {2016},\n  isbn = {978-3-319-24277-4},\n  url = {https://ggplot2.tidyverse.org},\n}\n\n\n\nConjuntos de dados\n\n\ndata() # abre uma lista com os datasets disponíveis\n\n# ?mtcars   # ajuda de um dataset específico\n\nConsole vs. editor: Você pode digitar comandos diretamente no console ou escrever um script no editor e então executá-lo. Em materiais didáticos, distinguimos os dois formatos para evitar confusão.\n\nCódigo mostrado com prompt (R&gt;) = digitado no console\n\n\nEm livros/notas, comandos de console costumam aparecer com o prompt na frente. Exemplo (divisão de 14 por 6):\n\n\nR&gt; options(prompt = \"R&gt; \", continue = \"+ \")\nR&gt; 14/6\n\n\nAo copiar para o R, remova o R&gt;, o console já mostra o seu próprio prompt.\n\n\nCódigo pensado para script (sem prompt)\n\n\nQuando o texto disser “escreva no editor e depois execute”, o código aparece sem R&gt;. Exemplo (laço simples):\n\n\nfor (myitem in 5:7) {\n  cat(\"--INÍCIO DO BLOCO--\\n\")\n  cat(\"o item atual é\", myitem, \"\\n\")\n  cat(\"--FIM DO BLOCO--\\n\\n\")\n}\n\n--INÍCIO DO BLOCO--\no item atual é 5 \n--FIM DO BLOCO--\n\n--INÍCIO DO BLOCO--\no item atual é 6 \n--FIM DO BLOCO--\n\n--INÍCIO DO BLOCO--\no item atual é 7 \n--FIM DO BLOCO--\n\n\n\n\n\n\n\n\nDica\n\n\n\nDica de estilo: chaves na mesma linha do for, quebra de linha para o corpo e indentação consistente.\n\n\n\nLinhas longas: uma linha só ou “quebradas”\n\n\nChamadas extensas podem ficar em uma linha ou ser quebradas em pontos naturais (geralmente após vírgulas ou antes de argumentos nomeados).\nAo quebrar, alinhe com o parêntese de abertura ou indente um nível.\n\nUma linha:\n\nordfac.vec &lt;- factor(x = c(\"Small\",\"Large\",\"Large\",\"Regular\",\"Small\"),\n                     levels = c(\"Small\",\"Regular\",\"Large\"),\n                     ordered = TRUE)\n\nQuebrada (equivalente, apenas formatação):\n\nordfac.vec2 &lt;-\n  factor(\n    x       = c(\"Small\",\"Large\",\"Large\",\"Regular\",\"Small\"),\n    levels  = c(\"Small\",\"Regular\",\"Large\"),\n    ordered = TRUE\n  )\nidentical(ordfac.vec, ordfac.vec2)\n\n[1] TRUE",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Uma pequena introdução ao R</span>"
    ]
  },
  {
    "objectID": "revisaoR.html#números-aritmética-atribuição-e-vetores",
    "href": "revisaoR.html#números-aritmética-atribuição-e-vetores",
    "title": "2  Uma pequena introdução ao R",
    "section": "2.3 Números, Aritmética, Atribuição e Vetores",
    "text": "2.3 Números, Aritmética, Atribuição e Vetores\n\nNúmeros (numerics)\n\nEm R, o tipo numérico padrão é double (ponto flutuante). Você também pode ter inteiros (sufixo L) e complexos.\n\ntypeof(1)      # \"double\"\n\n[1] \"double\"\n\ntypeof(1L)     # \"integer\"\n\n[1] \"integer\"\n\ntypeof(1+2i)   # \"complex\n\n[1] \"complex\"\n\n\n\nValores especiais:\n\n\n1/0  # Inf\n\n[1] Inf\n\n-1/0 # -Inf\n\n[1] -Inf\n\n0/0  # NaN\n\n[1] NaN\n\nis.finite(c(Inf, 3.14)) # checa finitude\n\n[1] FALSE  TRUE\n\n\n\n\n\n\n\n\nDica\n\n\n\nPrecisão numérica: comparações com == podem falhar por arredondamento binário. Prefira all.equal(x, y).\n\n\n\n# 1) Exemplo clássico\nx &lt;- 0.1 + 0.2\ny &lt;- 0.3\n\nx == y                       # pode dar FALSE\n\n[1] FALSE\n\nidentical(x, y)              # compara \"bit a bit\": quase sempre FALSE aqui\n\n[1] FALSE\n\n# Ver a diferença real (use mais dígitos)\nold &lt;- options(digits = 17)\nx; y; x - y                  # diferença minúscula de arredondamento binário\n\n[1] 0.30000000000000004\n\n\n[1] 0.29999999999999999\n\n\n[1] 5.5511151231257827e-17\n\noptions(old)\n\n# Comparação com tolerância\nx;y\n\n[1] 0.3\n\n\n[1] 0.3\n\nall.equal(x, y)              # Se “quase iguais”, retorna TRUE. Se diferem, retorna uma string explicando a diferença (ex.: \"Mean relative difference: 1.2e-08\").\n\n[1] TRUE\n\nisTRUE(all.equal(x, y))      # retorna um lógico (TRUE/FALSE)\n\n[1] TRUE\n\n# 2) Outros casos que sofrem com ponto flutuante\nsin(pi)                      # ~ 1.224646799e-16 (não é 0 exato)\n\n[1] 1.224647e-16\n\nsin(pi) == 0                 # FALSE\n\n[1] FALSE\n\nall.equal(sin(pi), 0)        # TRUE\n\n[1] TRUE\n\n# 3) Ajustando a tolerância manualmente (quando precisar ser mais/menos rígido)\nall.equal(x, y, tolerance = 1e-12)  # ainda TRUE\n\n[1] TRUE\n\nall.equal(x, y, tolerance = 1e-20)  # agora acusa diferença\n\n[1] \"Mean relative difference: 1.850372e-16\"\n\n# 4) Estratégia base sem all.equal: comparar o |erro| com um limite\nabs((sqrt(2))^2 - 2) &lt; 1e-12 # TRUE (aceita \"igualdade\" numérica com folga)\n\n[1] TRUE\n\n\n\nAritmética\n\nOperadores básicos: + - * / ^ e, ainda, divisão inteira %/% e módulo %%.\n\n14/6\n\n[1] 2.333333\n\n14 %/% 6 # quociente inteiro\n\n[1] 2\n\n14 %% 6 # resto\n\n[1] 2\n\n2^3  # potência\n\n[1] 8\n\n\n\nPrecedência: ^ → * / %/% %% → + -. Use parênteses para deixar claro!\n\n\nAtribuição\n\nO padrão recomendado é &lt;-. = também atribui, mas use-o preferencialmente para argumentos de função. -&gt; é atribuição para a direita. &lt;&lt;- afeta o ambiente pai (use com parcimônia).\n\nx &lt;- 10\ny = 5   # ok, mas prefira &lt;- fora de chamadas de função\nz &lt;- x + y\n\nz -&gt; resultado  # atribuição para a direita (menos comum)\nresultado\n\n[1] 15\n\n# Exemplo de &lt;&lt;- (evite, pode dificultar depuração)\ncontador &lt;- local({\n  n &lt;- 0\n  function() { n &lt;&lt;- n + 1; n }\n})\ncontador(); contador(); contador()\n\n[1] 1\n\n\n[1] 2\n\n\n[1] 3\n\n\n\n\n\n\n\n\nAviso\n\n\n\nBoas práticas: Evite &lt;&lt;- sempre que possível; prefira retornar valores e trabalhar com escopos explícitos.\n\n\n\nVetores (atômicos)\n\nVetores são coleções unidimensionais do mesmo tipo: lógico, inteiro, double, caractere, complexo ou raw.\n\nv &lt;- c(2, 4, 6, 8)\nlength(v); typeof(v)\n\n[1] 4\n\n\n[1] \"double\"\n\nseq(1, 5, by = 2)      # sequência\n\n[1] 1 3 5\n\n1:5                    # atalho\n\n[1] 1 2 3 4 5\n\nrep(3, times = 4)      # repetição\n\n[1] 3 3 3 3\n\n\n\nCoerção automática: ao misturar tipos, R promove para um tipo comum.\n\n\nc(1, TRUE, \"a\") # tudo vira character\n\n[1] \"1\"    \"TRUE\" \"a\"   \n\n\n\n\n\n\n\n\nAviso\n\n\n\nQuando você faz c(1, TRUE, \"a\"), o R precisa escolher um tipo comum para todos os elementos. A regra de coerção (promoção de tipos) segue, a grosso modo:\nlogical ⟶ integer ⟶ double ⟶ complex ⟶ character\n\n\n\nIndexação e filtragem:\n\n\nx &lt;- c(10, 20, 30, 40, 50)\nx[3]             # posição\n\n[1] 30\n\nx[-1]            # tudo, exceto o 1º\n\n[1] 20 30 40 50\n\nx[x &gt; 25]        # filtragem lógica\n\n[1] 30 40 50\n\nwhich(x &gt; 25)    # posições TRUE\n\n[1] 3 4 5\n\nnames(x) &lt;- letters[1:5]\nx[\"c\"]\n\n c \n30 \n\n\n4.1. Vetorização e reciclagem\nA maioria das operações é vetorizada (aplica-se elemento a elemento). Quando os comprimentos diferem, R tenta reciclar o menor vetor.\n\na &lt;- 1:5\nb &lt;- 10\na + b   # soma escalar-vetor (b é reciclado)\n\n[1] 11 12 13 14 15\n\na + c(1, 2) # reciclagem com aviso (5 não é múltiplo de 2)\n\nWarning in a + c(1, 2): comprimento do objeto maior não é múltiplo do\ncomprimento do objeto menor\n\n\n[1] 2 4 4 6 6\n\n\n4.2. Nomes × Objetos e copy-on-modify\n\nx &lt;- 1:3\ny &lt;- x\ny[1] &lt;- 99\nx  # permanece 1 2 3\n\n[1] 1 2 3\n\ny  # 99 2 3\n\n[1] 99  2  3\n\n\n\n\n\n\n\n\nAviso\n\n\n\nExceção: ambientes e estruturas por referência (p.ex., R6) não seguem copy-on-modify.\n\n\n\nExercícios\n\nCrie um vetor com os números de 5 a 15 e calcule a média.\nUse seq() para gerar 0, 0.5, 1,..., 5.\nMostre com código a diferença entre %/% e %% usando 14 e 6.\nAtribua x &lt;- 1:4 e some com o vetor c(10, 20). O que acontece?\nVerifique o tipo de 1, 1L e 1+0i. Explique a diferença entre tipo (typeof) e classe (class).\nCrie e armazene uma sequência de valores de 5 a −11, progredindo em passos de 0.3.\nReescreva o objeto de (6) com a mesma sequência invertida.\nRepita o vetor c(-1, 3, -5, 7, -9) duas vezes, com cada elemento repetido 10 vezes. Apresente os dados ordenados do maior para o menor.\nCrie e armazene um vetor contendo, em qualquer ordem:\n\n\ninteiros de 6 a 12 (inclusive);\n5.3 repetido 3 vezes;\no número −3;\nUma sequência de nove valores começando em 102 e terminando no número que é o comprimento total do vetor criado em (8).\n\n\nConfirme que o comprimento do vetor criado em (9) é 20.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Uma pequena introdução ao R</span>"
    ]
  },
  {
    "objectID": "revisaoR.html#matrizes",
    "href": "revisaoR.html#matrizes",
    "title": "2  Uma pequena introdução ao R",
    "section": "2.4 Matrizes",
    "text": "2.4 Matrizes\nA matriz é uma construção matemática importante e é essencial para muitos métodos estatísticos. Normalmente descreve-se uma matriz \\(A\\) como uma matriz \\(m \\times n\\); isto é, \\(A\\) terá exatamente \\(m\\) linhas e \\(n\\) colunas. Isso significa que \\(A\\) terá um total de \\(mn\\) entradas, com cada entrada a \\(i, j\\) ocupando uma posição única dada por sua linha específica \\((i = 1, 2,\\dots, m)\\) e coluna \\((j = 1, 2,\\dots, n)\\).\nPara criar uma matriz no R, use o comando, apropriadamente chamado, matrix, fornecendo as entradas da matriz ao argumento data como um vetor:\n\nA &lt;- matrix(\n     data = c(-3, 2, 893, 0.17),\n     nrow = 2, #linha\n     ncol = 2  #colunas\n     )\n\n\nA\n\n     [,1]   [,2]\n[1,]   -3 893.00\n[2,]    2   0.17\n\n\nÉ importante estar ciente de como o R preenche a matriz usando as entradas de data. Observando o exemplo anterior, você pode ver que a matriz \\(A\\) foi preenchida coluna por coluna ao ler as entradas de dados da esquerda para a direita. Você pode controlar como o R preenche os dados usando o argumento byrow, como mostrado nos exemplos a seguir:\n\nmatrix(data = c(1,2,3,4,5,6), nrow = 2, ncol = 3, byrow = FALSE)\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n\nQual a diferença na construção da matriz ao usar byrow = TRUE?\nTambém é possível construir matrizes usando os comandos cbind e rbind. Veja os exemplos abaixo:\n\ncbind(c(1,4), c(2,5), c(3,6))\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n\nrbind(1:3,4:6)\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n\n\nPara saber a dimensão, número de linhas e colunas de uma matriz você pode usar os seguintes comandos:\n\ndim(A); nrow(A); ncol(A)\n\n[1] 2 2\n\n\n[1] 2\n\n\n[1] 2\n\n\nConsidere a seguinte matriz:\n\nA &lt;- matrix(c(0.3, 4.5, 55.3, 91, 0.1, 105.5, -4.2, 8.2, 27.9), nrow = 3, ncol = 3)\n\nA\n\n     [,1]  [,2] [,3]\n[1,]  0.3  91.0 -4.2\n[2,]  4.5   0.1  8.2\n[3,] 55.3 105.5 27.9\n\n\nPara dizer ao R para “olhar para a terceira linha de \\(A\\) e me dar o elemento da segunda coluna”, você executa o seguinte:\n\nA[3, 2]\n\n[1] 105.5\n\n\nComo esperado, você recebe o elemento na posição \\([3,2]\\).\nVocê também pode identificar os valores ao longo da diagonal de uma matriz quadrada (isto é, uma matriz com igual número de linhas e colunas) usando o comando diag.\n\ndiag(A)\n\n[1]  0.3  0.1 27.9\n\n\n\nExercícios\n(a) Construa e armazene uma matriz \\(4 \\times 2\\) preenchida por linhas com os valores: 4.3, 3.1, 8.2, 8.2, 3.2, 0.9, 1.6 e 6.5 (nessa ordem).\n\nA &lt;- matrix(c(4.3, 3.1, 8.2, 8.2, 3.2, 0.9, 1.6, 6.5), nrow = 4, byrow = TRUE); A\n\n     [,1] [,2]\n[1,]  4.3  3.1\n[2,]  8.2  8.2\n[3,]  3.2  0.9\n[4,]  1.6  6.5\n\n\n(b) Confirme que as dimensões da matriz do item (a) são \\(3 \\times 2\\) se você remover qualquer uma das linhas.\n\nmatrix_test_32 &lt;- function(data){\n\nv_saida &lt;- NULL\nfor(i in 1:nrow(data)){\n\nv_saida[i] &lt;- all(dim(data[-i, , drop = FALSE]) == c(3,2))       \n}       \n\nsprintf( \"A matriz é 3x2? %s\", ifelse(all(v_saida) == TRUE, \"Sim\", \"Não\" ) )   \n} \n\n\nmatrix_test_32(A)\n\n[1] \"A matriz é 3x2? Sim\"\n\nB &lt;- matrix(c(1,2,3,4), ncol = 2); B\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\nmatrix_test_32(B)\n\n[1] \"A matriz é 3x2? Não\"\n\n\n(c) Sobrescreva a segunda coluna da matriz do item (a) com essa mesma coluna ordenada do menor para o maior.\n(d) O que o R retorna se você excluir a quarta linha e a primeira coluna do item (c)? Use matrix para garantir que o resultado seja uma matriz de uma única coluna, e não um vetor.\n(e) Armazene os quatro elementos inferiores do item (c) como uma nova matriz \\(2 \\times 2\\).\n(f) Sobrescreva, nesta ordem, os elementos do item (c) nas posições \\((4, 2), (1, 2), (4, 1)\\) e \\((1, 1)\\) com \\(-\\tfrac{1}{2}\\) dos dois valores na diagonal do item (e).",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Uma pequena introdução ao R</span>"
    ]
  },
  {
    "objectID": "revisaoR.html#operações-com-matrizes",
    "href": "revisaoR.html#operações-com-matrizes",
    "title": "2  Uma pequena introdução ao R",
    "section": "2.5 Operações com matrizes",
    "text": "2.5 Operações com matrizes\nEm R, a transposta de uma matriz se obtém com t(), ela troca linhas por colunas.\n\nA &lt;- rbind(c(2,5,2),c(6,1,4))\n\nt(A)\n\n     [,1] [,2]\n[1,]    2    6\n[2,]    5    1\n[3,]    2    4\n\n\nVocê pode criar uma matriz identidade de qualquer dimensão usando a função matrix, mas há uma forma mais rápida usando diag. Antes, usei diag em uma matriz existente para extrair ou sobrescrever seus elementos da diagonal. Você também pode usá-la assim:\n\nI4 &lt;- diag(4) # 4x4\nI4\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    0    0    0\n[2,]    0    1    0    0\n[3,]    0    0    1    0\n[4,]    0    0    0    1\n\nI5 &lt;- diag(1, nrow = 5, ncol = 5) #forma explicita\nI5\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    0    0    0    0\n[2,]    0    1    0    0    0\n[3,]    0    0    1    0    0\n[4,]    0    0    0    1    0\n[5,]    0    0    0    0    1\n\n\nO R realizará essa multiplicação de maneira elemento a elemento, como você poderia esperar. A multiplicação escalar de uma matriz é realizada usando o operador aritmético padrão *.\n\nA &lt;- rbind(c(2,5,2) , c(6,1,4))\na &lt;- 2\n\na*A\n\n     [,1] [,2] [,3]\n[1,]    4   10    4\n[2,]   12    2    8\n\n\nVocê pode somar ou subtrair quaisquer duas matrizes de mesmo tamanho usando os símbolos padrão + e -.\n\nA &lt;- cbind(c(2,5,2), c(6,1,4))\n\nA\n\n     [,1] [,2]\n[1,]    2    6\n[2,]    5    1\n[3,]    2    4\n\nB &lt;-  cbind(c(-2,3,6), c(8.1,8.2,-9.8))\n\nB\n\n     [,1] [,2]\n[1,]   -2  8.1\n[2,]    3  8.2\n[3,]    6 -9.8\n\nA - B\n\n     [,1] [,2]\n[1,]    4 -2.1\n[2,]    2 -7.2\n[3,]   -4 13.8\n\nA + B \n\n     [,1] [,2]\n[1,]    0 14.1\n[2,]    8  9.2\n[3,]    8 -5.8\n\n\nAo contrário da adição, subtração e multiplicação escalar, a multiplicação de matrizes não é um cálculo elemento a elemento, e o operador padrão * não pode ser usado. Em vez disso, você deve usar o operador de produto matricial do R, escrito com símbolos de porcentagem como %*%. Antes de tentar esse operador, vamos primeiro armazenar as duas matrizes de exemplo e verificar se o número de colunas na primeira matriz corresponde ao número de linhas na segunda matriz usando dim.\n\nA &lt;- rbind(c(2,5,2), c(6,1,4))\n\ndim(A)\n\n[1] 2 3\n\nB &lt;-  cbind(c(3,-1,1), c(-3,1,5))\n\ndim(B)\n\n[1] 3 2\n\n\nIsso confirma que as duas matrizes são compatíveis para a multiplicação, então você pode prosseguir.\n\nA%*%B\n\n     [,1] [,2]\n[1,]    3    9\n[2,]   21    3\n\n\nVocê pode mostrar que a multiplicação de matrizes é não comutativa usando as mesmas duas matrizes. Inverter a ordem da multiplicação produz um resultado completamente diferente.\n\nB%*%A\n\n     [,1] [,2] [,3]\n[1,]  -12   12   -6\n[2,]    4   -4    2\n[3,]   32   10   22\n\n\nMatrizes que não são invertíveis são chamadas de singulares. Inverter uma matriz é frequentemente necessário ao resolver sistemas de equações e tem implicações práticas importantes. Há vários métodos para inversão, e o custo computacional cresce muito à medida que o tamanho da matriz aumenta. Não entraremos em detalhes aqui; para discussões formais, veja Golub e Van Loan (1989). Por ora, veja a função solve do R como uma opção para inverter matrizes.\n\nA &lt;- matrix(data = c(3, 4, 1, 2), nrow = 2, ncol = 2)\n\nA\n\n     [,1] [,2]\n[1,]    3    1\n[2,]    4    2\n\nsolve(A)\n\n     [,1] [,2]\n[1,]    1 -0.5\n[2,]   -2  1.5\n\n\nVocê também pode verificar que o produto dessas duas matrizes (usando as regras de multiplicação de matrizes) resulta na matriz identidade \\(2 \\times 2\\)\n\nA %*% solve(A)\n\n     [,1] [,2]\n[1,]    1    0\n[2,]    0    1\n\n\n\nExercícios\n(a) Calcule\n\\[\n\\frac{2}{7}\\left(\n\\begin{bmatrix}1 & 2\\\\2 & 4 \\\\ 7 & 6\\end{bmatrix}\n-\n\\begin{bmatrix}10 & 20\\\\30 & 40 \\\\ 50 & 60\\end{bmatrix}\n\\right).\n\\]\n(b) Armazene as duas matrizes abaixo:\n\\[\nA=\\begin{bmatrix}1\\\\2\\\\7\\end{bmatrix},\n\\quad\nB=\\begin{bmatrix}3\\\\4\\\\8\\end{bmatrix}.\n\\]\nQuais das multiplicações a seguir são possíveis? Para as que forem, calcule o resultado.\n\n\\(A \\cdot B\\);\n\\(A^{\\top} \\cdot B\\);\n\\(B^{\\top} \\cdot (A \\cdot A^{\\top})\\);\n\\((A \\cdot A^{\\top}) \\cdot B^{\\top}\\);\n\\(\\big[(B \\cdot B^{\\top}) + (A \\cdot A^{\\top}) - 100\\,I_{3}\\big]^{-1}\\).\n\n(c) Para\n\\[\nA = \\begin{bmatrix}\n2&0&0&0\\\\\n0&3&0&0\\\\\n0&0&5&0\\\\\n0&0&0&-1\n\\end{bmatrix},\n\\]\nconfirme que \\(A^{-1}\\cdot A - I_{4}\\) fornece uma matriz \\(4\\times 4\\) de zeros.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Uma pequena introdução ao R</span>"
    ]
  },
  {
    "objectID": "revisaoR.html#laços-e-repetições",
    "href": "revisaoR.html#laços-e-repetições",
    "title": "2  Uma pequena introdução ao R",
    "section": "2.6 Laços e repetições",
    "text": "2.6 Laços e repetições\nO laço clássico, ao estilo Fortran, está disponível no R. A sintaxe é um pouco diferente, mas a ideia é idêntica: você pede que um índice, \\(i\\), assuma uma sequência de valores, e que uma ou mais linhas de comandos sejam executadas tantas vezes quantos forem os valores distintos de \\(i\\). A seguir, um laço executado cinco vezes com \\(i\\) de \\(1\\) a \\(5\\); imprimimos o quadrado de cada valor:\n\nfor(i in 1:5) print(i^2)\n\n[1] 1\n[1] 4\n[1] 9\n[1] 16\n[1] 25\n\n\nPara várias linhas de código, você usa chaves {} para incluir o material sobre o qual o laço deve atuar. Note que a “quebra de linha” (pressionar a tecla Enter) ao final de cada comando é uma parte essencial da estrutura (você pode substituir as quebras de linha por ponto e vírgula, se preferir, mas a clareza melhora se cada comando for colocado em uma linha separada).\n\nj &lt;- k &lt;- 0\nfor(i in 1:5){\nj &lt;- j + 1\nk &lt;- k + i*j\nprint(i + j + k)\n}\n\n[1] 3\n[1] 9\n[1] 20\n[1] 38\n[1] 65\n\n\nO fatorial de um número inteiro \\(x\\) (escrito \\(x!\\)) é o produto de todos os inteiros positivos de \\(1\\) até \\(x\\). Por definição:\n\\[x! = x \\times (x-1) \\times (x-2) \\times (x-3)\\dots \\times 2 \\times 1.\\] Por exemplo, \\(4! = 4\\times 3 \\times 2 \\times 1 = 24\\). Aqui está a função:\n\nfac1 &lt;- function(x){\nf &lt;- 1\nif(x &lt; 2) return(1)\n  for(i in 2:x){\n    f &lt;- f*i\n  }\nf\n}\n\nParece complicado para uma tarefa simples. Mas vamos testar de 0 a 5:\n\nsapply(0:5, fac1)\n\n[1]   1   1   2   6  24 120\n\n\nExistem outras duas funções de laço no R: repeat e while. Vamos demonstrar seu uso para fins de ilustração, mas podemos fazer bem melhor ao escrever uma função compacta para calcular fatoriais (veja abaixo). Primeiro, a função while:\n\nfac2 &lt;- function(x){\n  f &lt;- 1\n  t &lt;- x\n  while(t &gt; 1){\n    f &lt;- f*t\n    t &lt;- t - 1\n  }\n  return(f)\n}\n\nAgora iremos testar a função para os números inteiros de 0 a 5:\n\nsapply(0:5, fac2)\n\n[1]   1   1   2   6  24 120\n\n\n\n\n\n\n\n\nO ponto central\n\n\n\no while sozinho não gera a sequência; você precisa configurar e atualizar manualmente uma variável de controle (aqui t). Isso torna o while menos compacto do que for, mas útil quando você não sabe de antemão quantas iterações serão necessárias.\n\n\nPor fim, vamos mostrar o uso da função repeat:\n\nfac3 &lt;- function(x){\n  f &lt;- 1\n  t &lt;- x\n  repeat{\n    if(t&lt;2) break\n    f &lt;- f*t\n    t &lt;- t - 1\n  }\n  return(f)\n}\n\nO repeat em R não tem um fim explícito, ele vai rodar para sempre a menos que você coloque uma condição de saída que use break.\n\nsapply(0:5,fac3)\n\n[1]   1   1   2   6  24 120\n\n\nÉ uma boa prática de programação em R evitar o uso de laços sempre que possível. O uso de funções vetorizadas torna isso particularmente simples em muitos casos. Suponha que você queira substituir todos os valores negativos de um array por zeros. Você poderia ter escrito algo assim:\n\nfor(i in 1:length(y)){\n  if(y[i] &lt; 0) y[i] &lt;- 0\n}\n\nNo entanto, você pode simplesmente fazer assim:\n\ny[y&lt;0] &lt;- 0\n\nÀs vezes você quer fazer uma coisa se uma condição for verdadeira e outra diferente se a condição for falsa (em vez de não fazer nada, como no exemplo anterior). A função ifelse permite fazer isso em vetores inteiros sem precisar usar laços com for. Por exemplo, podemos querer substituir qualquer valor negativo de y por –1 e qualquer valor positivo ou zero por +1:\n\ny &lt;- c(-5, -1, 0, 2, 7)\nifelse(y &lt; 0, -1, 1)\n\n[1] -1 -1  1  1  1",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Uma pequena introdução ao R</span>"
    ]
  },
  {
    "objectID": "revisaoR.html#escrevendo-funções-no-r",
    "href": "revisaoR.html#escrevendo-funções-no-r",
    "title": "2  Uma pequena introdução ao R",
    "section": "2.7 Escrevendo funções no R",
    "text": "2.7 Escrevendo funções no R\nNormalmente você escreve funções em R para realizar operações que exigem duas ou mais linhas de código para serem executadas, e que você não quer digitar várias vezes. Podemos querer escrever funções simples para calcular medidas de tendência central, calcular fatoriais e coisas do tipo.\nFunções em R são objetos que realizam operações sobre argumentos que lhes são fornecidos e retornam um ou mais valores. A sintaxe para escrever uma função é\n\nfunction(lista_de_argumentos){\n  # corpo da função\n  # instruções\n  return(valor)\n}\n\nO primeiro componente da declaração de função é a palavra-chave function, que indica ao R que você quer criar uma função.\nUma lista de argumentos é uma lista separada por vírgulas de argumentos formais. Um argumento formal pode ser:\n\num símbolo (isto é, um nome de variável como x ou y),\numa declaração do tipo símbolo = expressão (por exemplo, pch = 16),\nou o argumento especial ... (três pontos), que permite passar múltiplos argumentos adicionais.\n\nO corpo pode ser qualquer expressão válida em R ou um conjunto de expressões em uma ou mais linhas. Em geral, o corpo é um grupo de expressões dentro de chaves { }, com cada expressão em uma linha separada (se o corpo couber em uma linha, as chaves não são necessárias).\nFunções normalmente são atribuídas a símbolos (variáveis), mas isso não é obrigatório. Esse conceito só começa a fazer sentido depois de ver vários exemplos em funcionamento.\n\n2.7.1 Média Aritmética\nA média é a soma dos valores \\(y_i\\) dividida pela quantidade de valores \\(n\\) (somando ao longo do número de elementos do vetor \\(y\\)). Em R, \\(n =\\)length(y) e \\(\\sum y =\\)sum(y). Assim, uma função para calcular a média aritmética é:\n\nmedia_aritmetica &lt;- function(x) sum(x)/length(x)\n\nVamos testar a função com dados em que sabemos de antemão qual deve ser o resultado.\n\ny &lt;- c(3, 3, 4, 5, 5)\nmedia_aritmetica(y)\n\n[1] 4\n\n\n\n\n2.7.2 Mediana\nA mediana (ou 50º percentil) é o valor do meio dos valores ordenados de um vetor de números:\n\nsort(y)[ceiling(length(y)/2)]\n\nHá, é claro, um pequeno problema aqui, porque se o vetor contém um número par de números, então não existe valor do meio. A lógica aqui é que precisamos calcular a média aritmética dos dois valores de y em cada lado do meio. Surge agora a questão de como sabemos, em geral, se o vetor contém um número ímpar ou par de números, de modo que possamos decidir qual dos dois métodos usar. O truque aqui é usar o módulo 2. Agora temos todas as ferramentas de que precisamos para escrever uma função geral para calcular medianas. Vamos chamar a função de mediana e defini-la assim:\n\nmediana &lt;- function(x){\n  impar_par &lt;- length(x)%%2\n  if(impar_par == 0) (sort(x)[length(x)/2] + sort(x)[1 + length(x)/2])/2\n  else sort(x)[ceiling(length(x)/2)]\n}\n\nVamos agora testar a função:\n\nmediana(y)\n\n[1] 4\n\n\n\n\nExercícios\n\nCrie sua própria função que calcula a variância, o desvio-padrão e o coeficiente de variação.\nCrie uma função para listar os elementos de uma série de Fibonacci (\\(1, 1, 2, 3, 5, 8, \\dots\\)).\nCrie uma função para calcular fatoriais usando o comando cumprod.\nCrie sua própria função para calcular a mediana.\nCrie sua própria função para calcular a média.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Uma pequena introdução ao R</span>"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "3  Motivação",
    "section": "",
    "text": "Da teoria à simulação\nDo ponto de vista teórico, a probabilidade de que todos os aniversários sejam distintos entre \\(r\\) pessoas é\n\\[\\Pr(\\text{todos distintos}) \\;=\\; \\prod_{i=1}^{r-1} \\frac{365-i}{365}\n\\;=\\; \\left(1 - \\frac{1}{365}\\right)\\!\\left(1 - \\frac{2}{365}\\right)\\!\\cdots\\!\\left(1 - \\frac{r-1}{365}\\right).\\]\nLogo, a probabilidade de pelo menos uma coincidência é\n\\[p_r = 1 - \\Pr(\\text{todos distintos}).\\]\nEsse produto é conceitualmente claro, mas fica pouco manejável mentalmente para \\(r\\) moderados. É aqui que a simulação computacional pode entrar como aliada didática e científica.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Motivação</span>"
    ]
  },
  {
    "objectID": "intro.html#um-atalho-analítico-útil",
    "href": "intro.html#um-atalho-analítico-útil",
    "title": "3  Motivação",
    "section": "Um atalho analítico útil",
    "text": "Um atalho analítico útil\nO produto acima admite uma aproximação exponencial simples e acurada, obtida tomando logaritmo e usando a expansão para argumentos pequenos:\n\\[\\ln(1 - x) = -x + o(x), \\quad (x \\to 0). \\] Aplicando ao produto,\n\\[\n\\begin{aligned}\n\\ln\\!\\big(1 - p_r\\big)\n\\;&=\\;\n\\sum_{i=1}^{r-1} \\ln\\!\\left(1 - \\frac{i}{365}\\right)\\\\\n\\;&\\approx\\;\n-\\,\\sum_{i=1}^{r-1} \\frac{i}{365}\n\\;=\\;\n-\\,\\frac{1 + 2 + \\cdots + (r-1)}{365}\n\\;=\\;\n-\\,\\frac{r(r-1)}{2 \\cdot 365}.\\end{aligned}\\]\nExponentiando e isolando \\(p_r\\), obtemos a aproximação\n\\[\np_r \\;\\approx\\; 1 - \\exp\\!\\left\\{-\\,\\frac{r(r-1)}{730}\\right\\}.\n\\]\nEssa fórmula tem três virtudes didáticas:\n\nClareza: exibe explicitamente o papel do número de pares \\(\\binom{r}{2}\\).\nRapidez: permite cálculos aproximados para valores de \\(r\\) de interesse.\nBoas aproximações já para \\(r\\) na casa das dezenas.\n\n\n\n\n\n\n\nExemplo Rápido\n\n\n\n\nPara 23 pessoas:\n\n\\[p_{23}^{(\\text{aprox})}\n  \\;=\\;\n  1 - \\exp\\!\\left\\{-\\frac{23\\cdot22}{730}\\right\\}\n  \\;=\\;\n  1 - \\exp\\!\\{-0.69315\\}\n  \\;\\approx\\; 0.500,\\]\nalinhando-se ao resultado clássico de que 23 pessoas já superam 50% de chance de coincidência.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Motivação</span>"
    ]
  },
  {
    "objectID": "intro.html#o-papel-da-simulação",
    "href": "intro.html#o-papel-da-simulação",
    "title": "3  Motivação",
    "section": "O papel da simulação",
    "text": "O papel da simulação\nA simulação estatística permite reproduzir o experimento de forma empírica: sorteamos aleatoriamente dias de aniversário para os indivíduos e verificamos se há repetições. Repetindo o processo milhares de vezes, obtemos uma estimativa para a probabilidade de coincidência.\nPor exemplo, em R:\n\nr &lt;- 23\nbirthdays &lt;- sample(1:365, r, replace = TRUE)\nany(duplicated(birthdays))\n\n[1] TRUE\n\n\nAo repetir esse procedimento muitas vezes (por exemplo, 10.000 simulações), podemos estimar a proporção de conjuntos com coincidência. Pela Lei dos Grandes Números, essa estimativa converge para o valor teórico de aproximadamente 0,507 quando \\(r=23\\).\n\nset.seed(123) #reprodutibilidade\n\nr &lt;- 23\nB &lt;- 10000\n\nacertos &lt;- 0\ni &lt;- 0\n\nrepeat {\n  i &lt;- i + 1\n  bdays &lt;- sample(1:365, r, replace = TRUE)\n  acertos &lt;- acertos + as.integer(any(duplicated(bdays)))\n  if (i &gt;= B) break\n}\n\np_hat &lt;- acertos / B\np_hat\n\n[1] 0.5073",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Motivação</span>"
    ]
  },
  {
    "objectID": "intro.html#atividade-problema-do-aniversário-22-jogadores",
    "href": "intro.html#atividade-problema-do-aniversário-22-jogadores",
    "title": "3  Motivação",
    "section": "Atividade: Problema do Aniversário (22 jogadores)",
    "text": "Atividade: Problema do Aniversário (22 jogadores)\nNesta motivação consideramos um exemplo discutido em Martins (2018) que é o conhecido e amplamente divulgado problema do aniversário (ver, por exemplo, Falk 2014). Martins (2018) segue o exemplo de Matthews e Stones (1998), considerando duas equipes de futebol e, portanto, coincidências de aniversário entre 22 jogadores. Martins (2018) afirma que um resultado positivo importante dessa atividade é a discussão que surgirá naturalmente entre os estudantes, com o professor atuando como mediador. Além disso, os estudantes adoram jogos e a descoberta prática, e a simulação facilita o engajamento nessas atividades, ao mesmo tempo que ilustra resultados que podem ser não intuitivos, bem como teoria geral, como a Lei dos Grandes Números.\nAgora iremos considerar o seguinte problema:\n\n\n\n\n\n\nProblema\n\n\n\nEm uma partida de futebol, qual é a probabilidade de que pelo menos dois dos 22 jogadores façam aniversário no mesmo dia?\n\n\nEm um pais chamado de país do futebol, o contexto é proposital: o futebol é popular e as probabilidades resultantes são contraintuitivas. Antes de qualquer cálculo, considere as hipóteses: (i) todos os 365 dias do ano são igualmente prováveis para qualquer aniversário; (ii) as datas de aniversário dos jogadores são independentes entre si.\nObjetivos\n\nEstimar, via simulação, a probabilidade de coincidência de aniversários.\nRelacionar frequência relativa, Lei dos Grandes Números e variação amostral.\nComparar o resultado exato e aproximado.\n\nHipóteses\n\n365 dias equiprováveis, datas independentes, ignorar bissexto/gêmeos.\n\nMateriais\n\nR (ou Posit Cloud), roteiro com comandos sample(), table(), mean().",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Motivação</span>"
    ]
  },
  {
    "objectID": "intro.html#exercícios",
    "href": "intro.html#exercícios",
    "title": "3  Motivação",
    "section": "Exercícios",
    "text": "Exercícios\n\nDeterminar o menor número de pessoas que deve estar em uma sala para que se possa apostar, com mais de 50% de chance de ganhar, que entre elas existam pelo menos duas com o mesmo aniversário.\nDeterminar o menor número de outras pessoas que deve estar em uma sala com você para que se possa apostar, com mais de 50% de chance de ganhar, que pelo menos uma delas tenha o mesmo aniversário que o seu.\n\n\n\n\n\nFalk, Ruma. 2014. “A Closer Look at the Notorious Birthday Coincidences”. Teaching Statistics 36 (2): 41–46. https://doi.org/10.1111/test.12014.\n\n\nMartins, Rui Manuel Da Costa. 2018. “Learning the Principles of Simulation Using the Birthday Problem”. Teaching Statistics 40 (3): 108–11. https://doi.org/10.1111/test.12164.\n\n\nMatthews, Robert, e Fiona Stones. 1998. “Coincidences: the truth is out there”. Teaching Statistics 20 (1): 17–19. https://doi.org/https://doi.org/10.1111/j.1467-9639.1998.tb00752.x.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Motivação</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "4  Números Uniformes",
    "section": "",
    "text": "4.1 Geração de sequências \\(U(0,1)\\)\nUma abordagem é utilizar dispositivos físicos aleatorizadores, como máquinas que sorteiam números de loteria, roletas ou circuitos eletrônicos que produzem “ruído aleatório”. Contudo, tais dispositivos apresentam desvantagens:\nUma forma simples de obter reprodutibilidade é armazenar a sequência em um dispositivo de memória (HD, CD-ROM, livro). De fato, a RAND Corporation publicou A Million Random Digits with 100 000 Random Normal Deviates (1955). Entretanto, acessar armazenamento externo milhares ou milhões de vezes torna a simulação lenta.\nAssim, a abordagem preferida é gerar números pseudoaleatórios em tempo de execução, via recorrências determinísticas sobre inteiros. Isso permite:\nEntretanto, a escolha inadequada da recorrência pode gerar sequências com baixa qualidade estatística. Um dos métodos mais antigos e influentes para isso é o Gerador Congruencial Linear (GCL).",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Números Uniformes</span>"
    ]
  },
  {
    "objectID": "summary.html#geração-de-sequências-u01",
    "href": "summary.html#geração-de-sequências-u01",
    "title": "4  Números Uniformes",
    "section": "",
    "text": "Baixa velocidade e dificuldade de integração direta com computadores.\nNecessidade de reprodutibilidade da sequência. Por exemplo, para verificação de código ou comparação de políticas em um modelo de simulação, usando a mesma sequência para reduzir a variância da diferença entre resultados.\n\n\n\n\n\n\n\n\nNota\n\n\n\n\nTambém existem fontes para números aleatórios reais na Internet.\nO www.random.org oferece números aleatórios verdadeiros para qualquer pessoa na internet. A aleatoriedade vem do ruído atmosférico, que para muitos propósitos é melhor do que os algoritmos de números pseudoaleatórios normalmente usados em programas de computador. As pessoas usam os números para operar loterias, sorteios e apostas, e para seus jogos e sites de apostas.\nEm www.randomnumbers.info é oferecida a possibilidade de baixar números aleatórios gerados usando um gerador quântico de números aleatórios sob demanda.\n\n\n\n\n\nGeração rápida;\nEliminação do problema de armazenamento;\nReprodutibilidade controlada.\n\n\n\nGerador Congruencial Linear\nO GCL produz uma sequência de inteiros \\(x_0, x_1, x_2, \\dots\\) segundo a regra:\n\\[x_n = (a \\, x_{n-1} + c) \\;\\; \\text{mod} \\;\\; m\\]\nem que, \\(m &gt; 0\\) é o módulo, \\(a\\) é o multiplicador, \\(c\\) é o incremento e\n\\(x_0\\) é a semente (seed), escolhida pelo usuário.\nO resultado final é obtido normalizando os valores:\n\\[u_n = \\frac{x_n}{m}, \\quad \\text{com } u_n \\in (0, 1).\\]\n\n\n\n\n\n\nTipos\n\n\n\n\nMultiplicativo: \\(c = 0\\).\n\nMisto: \\(c \\neq 0\\).\n\n\n\n\n\nPor que o GCL funciona?\n\nSimplicidade: apenas uma multiplicação, uma soma e uma operação de módulo.\n\nVelocidade: pode ser implementado de forma extremamente eficiente.\n\nControle: dependendo da escolha de \\(a, c, m\\), é possível obter um período longo, ou seja, muitos números gerados antes de a sequência se repetir.\n\n\n\nCritérios para bons parâmetros\n\nO módulo \\(m\\) deve ser grande, de preferência próximo da capacidade da máquina.\n\nPara GCL multiplicativo, se \\(m\\) for primo, existe a possibilidade de alcançar período máximo \\(m-1\\).\n\nValores históricos:\n\nPark–Miller (1988): \\(m = 2^{31} - 1\\), \\(a = 16807\\), \\(c = 0\\).\n\nNumerical Recipes (1992): \\(m = 2^{32}\\), \\(a = 1664525\\), \\(c = 1013904223\\).\n\n\n\nExemplos\n\n# Gerador Congruencial Linear em Python\n\ndef gcl(seed, a, c, m, n = 10):\n    \"Gera n números pseudoaleatórios normalizados em (0,1).\"\n    x = seed\n    seq = []\n    for _ in range(n):\n        x = (a * x + c) % m\n        seq.append(x / m)\n    return seq\n\n# Exemplo: Park–Miller (multiplicativo)\nm = 2**31 - 1\na = 16807\nc = 0\nseed = 12345\n\ngcl(seed, a, c, m, n=10)\n\n[0.09661652850760917, 0.8339946273872604, 0.9477024976851895, 0.035878594981449935, 0.011545853229028104, 0.051155220275351417, 0.7657871678312249, 0.5849297393974521, 0.9141300529773021, 0.7838003895170057]\n\n\n\n# Gerador Congruencial Linear em R\n\ngcl &lt;- function(seed, a, c, m, n=10) {\n  x &lt;- seed\n  seq &lt;- numeric(n)\n  for (i in 1:n) {\n    x &lt;- (a * x + c) %% m\n    seq[i] &lt;- x / m\n  }\n  seq\n}\n\n# Exemplo: Park–Miller\nm &lt;- 2^31 - 1\na &lt;- 16807\nc &lt;- 0\nseed &lt;- 12345\n\ngcl(seed, a, c, m, n=10)\n\n [1] 0.09661653 0.83399463 0.94770250 0.03587859 0.01154585 0.05115522\n [7] 0.76578717 0.58492974 0.91413005 0.78380039\n\n\n\n\n\nVisualização\nUma forma simples de verificar se um gerador se comporta bem é observar os valores em um gráfico de dispersão \\((u_{n}, u_{n+1}).\\)\n\nUm bom gerador mostra pontos espalhados de forma quase aleatória.\nUm gerador ruim forma padrões visíveis (linhas ou grades).\n\n\n\nLimitações\nApesar de sua importância histórica, os GCLs apresentam limitações:\n\nO período, mesmo que longo, é finito.\nPodem apresentar correlações indesejadas em dimensões mais altas.\nNão são recomendados para aplicações de alta segurança (como criptografia).\n\nHoje, geradores como o Mersenne Twister substituíram o GCL em muitas linguagens (por exemplo, é o padrão no R e no NumPy). Ainda assim, o GCL é fundamental para entender os princípios da geração de números pseudoaleatórios.\n\nExercícios\n\nImplemente um GCL (multiplicativo ou misto) em Python ou R.\nGere 1000 números pseudoaleatórios e faça:\n\n\nUm histograma para verificar se a distribuição se parece com a uniforme \\((0, 1)\\).\nUm gráfico de dispersão de pares consecutivos \\((u_{n}, u_{n+1})\\).\n\n\nCompare o comportamento quando:\n\n\nUsa os parâmetros clássicos de Park–Miller \\((m = 2^{31} - 1, a = 16807, c = 0)\\).\nUsa parâmetros pequenos, por exemplo \\(m = 17, a = 5, c = 1\\).\n\nPergunta para reflexão: O que acontece com a qualidade dos números gerados quando usamos parâmetros pequenos?\n\n\n\n\n\n\nPark–Miller hoje: ainda vale a pena?\n\n\n\nO gerador congruencial linear clássico de Park–Miller foi proposto em 1988, com parâmetros:\n\\[m = 2^{31} - 1 \\approx 2,147,483,647, \\quad a = 16807, \\quad c = 0.\\]\nNa época, esses valores eram ideais para computadores de 32 bits, embora a implementação precisasse de alguns cuidados para evitar overflow.\nNos computadores modernos de 64 bits, esse problema desaparece: o produto \\(a \\times x\\) cabe confortavelmente nos registradores, e a implementação é direta e eficiente.\nVantagens atuais:\n\nSimples e rápido.\nFácil de implementar em qualquer linguagem.\nPeríodo máximo de mais de 2 bilhões de números.\n\nLimitações:\n\nHoje, esse período pode ser considerado curto para simulações muito extensas.\nGeradores modernos, como o Mersenne Twister (período \\(2^{19937}-1\\)) ou a família GCP (Gerador Congruencial Permutado), oferecem propriedades estatísticas superiores.\n\n📌 Em resumo: O Park–Miller ainda é excelente para fins didáticos e pequenas simulações, mas para aplicações científicas de grande escala recomenda-se usar geradores mais robustos.\n\n\nExistem no R vários algoritmos para geradores de números pseudoaleatórios. Para ver quais são, basta:\n\nhelp(Random)\n\n\n\n\nImagem da documentação.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Números Uniformes</span>"
    ]
  },
  {
    "objectID": "summary.html#uso-de-números-aleatórios-na-avaliação-de-integrais",
    "href": "summary.html#uso-de-números-aleatórios-na-avaliação-de-integrais",
    "title": "4  Números Uniformes",
    "section": "4.2 Uso de Números Aleatórios na Avaliação de Integrais",
    "text": "4.2 Uso de Números Aleatórios na Avaliação de Integrais\nUma das primeiras aplicações do uso de números aleatórios foi na resolução de integrais. Considere uma função \\(g(x)\\) e suponha que desejamos calcular uma integral de interesse.\n\\[\\theta = \\int\\limits_{0}^{1}g(x) dx.\\]\nPara calcular o valor da integral, observe que, se \\(U\\) é uma variável aleatória com distribuição uniforme no intervalo \\((0, 1)\\), então podemos reescrever a integral da seguinte forma:\n\\[\\theta = E[g(U)].\\] Se \\(U_1, U_2, \\dots,  U_n\\) são variáveis aleatórias independentes e uniformes em \\((0, 1)\\), então as variáveis \\(g(U_1), g(U_2), \\dots,  g(U_n)\\) são indepedentes e identicamente distribuídas, todas com esperança igual \\(\\theta\\) (o valor da integral). Assim, pelo Teorema da Lei Forte dos Grandes Números, temos que, com probabilidade 1,\n\\[\\frac{1}{n}\\sum\\limits_{i=1}^{n}g(U_i) \\to \\theta \\quad \\text{quando} \\quad n \\to \\infty.\\]\nAssim, podemos aproximar o valor da integral gerando um grande número de pontos aleatórios \\(u_i\\) no intervalo \\((0, 1)\\) e tomando como estimativa a média dos valores \\(g(u_i)\\). Esse procedimento de aproximação de integrais é conhecido como método de Monte Carlo.\nSe quisermos calcular uma integral mais geral, podemos aplicar a mesma ideia: transformar o problema em uma esperança matemática e, em seguida, aproximá-la por meio de médias amostrais obtidas a partir de números aleatórios. Considere:\n\\[\\theta = \\int\\limits_{a}^{b}g(x) dx.\\]\nSe quisermos calcular a integral em um intervalo genérico \\((a, b)\\), fazemos a substituição\n\\[u = \\frac{x - a}{b-a}, \\quad du = \\frac{dx}{b-a},\\]\no que nos permite reescrevê-la como\n\\[\\theta = \\int\\limits_{a}^{b}g(x) dx = (b-a)\\int\\limits_{0}^{1}g(a + (b-a)u) du.\\]\nDefinindo\n\\[h(u) = (b-a)g(a + (b-a)u),\\]\ntemos\n\\[\\theta = \\int\\limits_{0}^{1}h(u) du.\\]\nAssim, podemos aproximar \\(\\theta\\) gerando números aleatórios \\(u_1, u_2, \\dots, u_n \\sim U(0, 1)\\) e tomando como estimativa a média\n\\[\\frac{1}{n}\\sum\\limits_{i=1}^{n}h(u_i).\\] Agora, se nosso objetivo é calcular a integral:\n\\[\\theta = \\int\\limits_{0}^{\\infty}g(x) dx.\\]\nFazendo a mudança de variável\n\\[u = \\frac{1}{x+1}, \\quad du = \\frac{-dx}{(x+1)^2} = -u^2 dx.\\]\nLogo,\n\\[dx = -\\frac{du}{u^2},\\]\ne a integral resultante é\n\\[\\theta = \\int\\limits_{0}^{1}h(u) du,\\]\ncom\n\\[h(u) = \\frac{g\\left(\\frac{1}{u} - 1\\right)}{u^2}.\\]\nA utilidade de empregar números aleatórios para aproximar integrais torna-se ainda mais evidente no caso de integrais multidimensionais. Suponha que \\(g\\) seja uma função com argumento \\(n\\)-dimensional e que estejamos interessados em calcular:\n\\[\\theta = \\int\\limits_{0}^{1}\\int\\limits_{0}^{1}\\dots\\int\\limits_{0}^{1} g(x_1, x_2, \\dots, x_n)dx_1 dx_2 \\dots dx_n.\\]\nObserve que \\(\\theta\\) pode ser expresso como o seguinte valor esperado:\n\\[\\theta = E[g(U_1, U_2, \\dots, U_n)],\\]\nem que \\(U_1, U_2, \\dots, U_n\\) são variáveis aleatória independentes uniformente distribuídas no intervalo \\((0, 1)\\). Assim, se gerarmos \\(k\\) conjuntos independentes, cada um formado por \\(n\\) variáveis aleatórias independentes com distribuição uniforme em \\((0, 1)\\), então as variáveis\n\\[g(U_{i1}, U_{i2}, \\dots, U_{in}), \\quad i = 1, 2, \\dots, k,\\] serão independentes e identicamente distribuídas, todas com esperança igual a \\(\\theta\\) (o valor da integral). Portanto, podemos estimar \\(\\theta\\) por meio da média amostral:\n\\[\\hat{\\theta} = \\frac{1}{k}\\sum\\limits_{i=1}^{k}g(U_{i1}, U_{i2}, \\dots, U_{in}).\\]\n\nExemplo\nNosso objetivo é encontrar o valor aproximado da integral: \\(\\int_{0}^{1} x^3 dx = 0.25.\\)\n\nset.seed(2025) #fixando a semente\nn &lt;- 100000 #quantidade de valores uniformes gerados\nu &lt;- runif(n) #numeros uniformes (0,1)\nmean(u^3)\n\n[1] 0.2503221\n\n\n\nimport numpy as np\nnp.random.seed(2025)\nn = 100000\nu = np.random.uniform(0, 1, n)\nresultado = np.mean(u**3)\n\nprint(resultado)\n\n0.2508972398766188\n\n\n\n\nExercícios\n\nSe \\(x_0\\) e \\(x_n = 3x_{n-1}\\, \\text{mod}\\, 150\\), encontre \\(x_1, x_2, \\dots, x_{30}\\).\nSe \\(x_3\\) e \\(x_n = (5x_{n-1} + 7)\\, \\text{mod}\\, 200\\), encontre \\(x_1, x_2, \\dots, x_{10}\\).\nCompare sua estimativa com o valor exato:\n\n\n\\(\\int_{0}^{1} \\exp\\{{e^x}\\} dx\\).\n\\(\\int_{0}^{1} (1 - x^2)^{3/2} dx\\).\n\\(\\int_{-2}^{2} \\exp\\{x + x^2\\} dx\\).\n\\(\\int_{0}^{\\infty} x(1 + x^2)^{-2} dx\\).\n\\(\\int_{-\\infty}^{\\infty} \\exp\\{-x^2\\} dx\\).\n\\(\\int_{0}^{1}\\int_{0}^{1} \\exp\\{(x+y)^2\\} dy dx\\).\n\\(\\int_{0}^{\\infty}\\int_{0}^{x} \\exp\\{-(x+y)\\} dydx\\).\n\n\nUse simulação para encontrar o valor aproximado de \\(Cov(U, e^U)\\), em que \\(U\\) é uniforme em \\((0,1)\\). Compare seu resultado com o valor exato.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Números Uniformes</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "Referências",
    "section": "",
    "text": "Falk, Ruma. 2014. “A Closer Look at the Notorious Birthday\nCoincidences.” Teaching Statistics 36 (2): 41–46. https://doi.org/10.1111/test.12014.\n\n\nHodgson, Ted, and Maurice Burke. 2000. “On Simulation and the\nTeaching of Statistics.” Teaching Statistics 22 (3):\n91–96. https://doi.org/10.1111/1467-9639.00033.\n\n\nMartins, Rui Manuel Da Costa. 2018. “Learning the Principles of\nSimulation Using the Birthday Problem.” Teaching\nStatistics 40 (3): 108–11. https://doi.org/10.1111/test.12164.\n\n\nMatthews, Robert, and Fiona Stones. 1998. “Coincidences: The Truth\nIs Out There.” Teaching Statistics 20 (1): 17–19.\nhttps://doi.org/https://doi.org/10.1111/j.1467-9639.1998.tb00752.x.\n\n\nThomas, F. H., and J. L. Moore. 1980. “CUSUM:\nComputer Simulation for Statistics Teaching.” Teaching\nStatistics 2 (1): 23–28. https://doi.org/10.1111/j.1467-9639.1980.tb00374.x.\n\n\nTintle, Nathan, Beth Chance, George Cobb, Soma Roy, Todd Swanson, and\nJill VanderStoep. 2015. “Combating Anti-Statistical Thinking Using\nSimulation-Based Methods Throughout the Undergraduate\nCurriculum.” The American Statistician 69 (4): 362–70.\nhttps://doi.org/10.1080/00031305.2015.1081619.\n\n\nZieffler, Andrew, and Joan B. Garfield. 2007. “Studying the Role\nof Simulation in Developing Students’ Statistical Reasoning.” In\nProceedings of the 56th Session of the International Statistical\nInstitute (ISI). International Statistical Institute.",
    "crumbs": [
      "Referências"
    ]
  }
]